# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/New_Project_Generator.ipynb.

# %% auto 0
__all__ = ['logger', 'create_project']

# %% ../../nbs/New_Project_Generator.ipynb 1
from typing import *
import shutil
from pathlib import Path
import os
from tempfile import TemporaryDirectory

from yaspin import yaspin

from .logger import get_logger
from faststream_gen._code_generator.helper import (
    download_and_extract_faststream_archive,
    write_file_contents,
    read_file_contents
)
from faststream_gen._code_generator.constants import (
    FASTSTREAM_TEMPLATE_ZIP_URL,
    FASTSTREAM_TEMPLATE_DIR_SUFFIX,
    INTERMEDIATE_RESULTS_DIR_NAME,
    APPLICATION_FILE_NAME,
    INTEGRATION_TEST_FILE_NAME
)

# %% ../../nbs/New_Project_Generator.ipynb 3
logger = get_logger(__name__)

# %% ../../nbs/New_Project_Generator.ipynb 5
def create_project(output_path: str, save_intermediate_files: bool) -> None:
     with yaspin(
        text="Creating a new FastStream project...", color="cyan", spinner="clock"
    ) as sp:
            
        with download_and_extract_faststream_archive(FASTSTREAM_TEMPLATE_ZIP_URL) as extracted_path:
            with TemporaryDirectory() as tmp_dir:
                app_path = f"{tmp_dir}/app/application.py"
                test_path = f"{tmp_dir}/tests/test_application.py"
                intermediate_dir_path = f"{output_path}/{INTERMEDIATE_RESULTS_DIR_NAME}"
                shutil.copytree(str(extracted_path / FASTSTREAM_TEMPLATE_DIR_SUFFIX), tmp_dir, dirs_exist_ok=True)
                shutil.copy(f"{intermediate_dir_path}/{APPLICATION_FILE_NAME}", app_path)
                shutil.copy(f"{intermediate_dir_path}/{INTEGRATION_TEST_FILE_NAME}", test_path)

                test_file_contents = read_file_contents(test_path)
                test_file_contents = test_file_contents.replace("from application import", "from app.application import")
                write_file_contents(test_path, test_file_contents)

                shutil.copytree(tmp_dir, output_path, dirs_exist_ok=True)
                if not save_intermediate_files:
                    shutil.rmtree(intermediate_dir_path)
                
        sp.text = ""
        sp.ok(f" âœ” New FastStream project created.")
