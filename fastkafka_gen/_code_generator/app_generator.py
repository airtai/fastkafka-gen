# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/App_Generator.ipynb.

# %% auto 0
__all__ = ['logger', 'generate_app']

# %% ../../nbs/App_Generator.ipynb 1
from typing import *
import time
import json
from tempfile import TemporaryDirectory
from pathlib import Path

from yaspin import yaspin

from .._components.logger import get_logger
from .helper import CustomAIChat, ValidateAndFixResponse
from .prompts import APP_GENERATION_PROMPT

# %% ../../nbs/App_Generator.ipynb 3
logger = get_logger(__name__)

# %% ../../nbs/App_Generator.ipynb 5
def _validate_response() -> List[str]:
    return []

# %% ../../nbs/App_Generator.ipynb 8
def _save_app(contents: str, output_path: str) -> str:
    """Save the YAML-formatted asyncapi spec in the specified output path.

    Args:
        contents: Generated python code
        output_file: The path to save the generated code.
    """
    Path(output_path).mkdir(parents=True, exist_ok=True)
    
    output_file = f"{output_path}/application.py"
    with open(output_file, "w", encoding="utf-8") as f:
        f.write(contents)
    
    return output_file

# %% ../../nbs/App_Generator.ipynb 10
def generate_app(asyncapi_spec: str, output_path: str) -> Tuple[str, str]:
    """Generate code for the new FastKafka app from the validated plan
    
    Args:
        asyncapi_spec: The validated AsyncAPI spec generated from the user's application description
        output_path: The path where the validated spec AsyncAPI file is located
    Returns:
        The generated FastKafka code
    """
    # TODO: Generate code form the ASYNCAPI
    # TODO: Validate the generated code
    with yaspin(text="Generating FastKafka app...", color="cyan", spinner="clock") as sp:
        
        app_generator = CustomAIChat(user_prompt=APP_GENERATION_PROMPT)
        app_validator = ValidateAndFixResponse(app_generator, _validate_response)
        validated_app, total_tokens = app_validator.fix(asyncapi_spec)
        
        output_file = _save_async_api_spec(validated_async_spec, output_path)
        
        sp.text = ""
        sp.ok(" âœ” FastKafka app generated and saved at: {output_file}")
        return validated_app, total_tokens
